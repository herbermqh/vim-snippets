priority -50

extends texmath

global !p

def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

def create_table(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]

	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))

	rows = int_val(rows)
	cols = int_val(cols)

	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]

	snip.buffer[snip.line] = ''

	final_str = old_spacing + "\\begin{tabular}{|" + "|".join(['$' + str(i + 1) for i in range(cols)]) + "|}\n"

	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + offset) for j in range(cols)])

		final_str += " \\\\\\\n"

	final_str += old_spacing + "\\end{tabular}\n$0"

	snip.expand_anon(final_str)

def add_row(snip):
	row_len = int(''.join(s for s in snip.buffer[snip.line] if s.isdigit()))
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]

	snip.buffer[snip.line] = ''

	final_str = old_spacing
	final_str += " & ".join(['$' + str(j + 1) for j in range(row_len)])
	final_str += " \\\\\\"

	snip.expand_anon(final_str)

endglobal


#DOCUMENT
# \begin{}...\end{
snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

##################
#  TEXTO NORMAL  #
##################
#caracteres especiales

#verb

#fuentes
snippet bf "Bold"
\textbf{$1} $0
endsnippet

snippet ita "Italics"
\textit{$1} $0
endsnippet


#tamanos letras

#centrado

#espacio horizontal y vertical

#cajas

#multicol
snippet mul2 "two-column environment with multicol" b
\begin{multicols}{2}
	${0}
\end{multicols}
endsnippet

snippet mul3 "En tres columna" b
\begin{multicols}{3}
	${0}
\end{multicols}
endsnippet

#minipage

#parbox
snippet parboxImage "Parbox image" b
	\parbox{\widthparbox}{\pgfimage[width=\widthparbox]{\rootimage/${0}}}
endsnippet

snippet parboxText "Parbox text" b
	\parbox{\widthparbox}{
		${0}
	}
endsnippet

#lineas 

#nota en pie de pagina

#texto com en la pantalla

#xcolor

#cajas

#notas en el margen

#enumerate
snippet enum "Enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet enuma "Enumerate" b
\begin{enumerate}[a)]
	\item $0
\end{enumerate}
endsnippet

snippet enumi "Enumerate" b
\begin{enumerate}[i)]
	\item $0
\end{enumerate}
endsnippet

# Itemize
snippet item "Itemize" b
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

context "env('enumerate')"
snippet it "item" iA
\item $0
endsnippet

context "env('question')"
snippet it "item" iA
\item $0
endsnippet

context "env('itemize')"
snippet it "item" iA
\item $0
endsnippet

context "env('description')"
snippet it "item" iA
\item[$1] $0
endsnippet



#description
snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

#otra entornos de enumeracion o listas
snippet nit "Lista con nombre" b
\begin{NameItem}[${1:nombre}]
	\item ${0}
\end{NameItem}
endsnippet

snippet qt "Preguntas" b
	\begin{question}
		\item ${0}
	\end{question}
endsnippet

#titulo

#tabla contenido

#capitulo y secciones

#bibliografia

#referencia bibliografica

#definiciones
snippet def "Definición" b
\begin{definicion}[$1]
	$0
\end{definicion}
endsnippet
  
#teoremas demostraciones
snippet dem "Demostracion" b
\begin{demostracion}
	$0
\end{demostracion}
endsnippet
 
snippet teo "Teorema" 
\begin{theorem}
	${0}
\end{theorem}
endsnippet

#otros entornos
snippet ej "Ejemplo en una sola columna" b
\begin{ej}
	\begin{pre}
		$1
	\end{pre}
	\begin{sol}
		$0
	\end{sol}
\end{ej}
endsnippet

snippet ej2 "Ejemplo en dos columna" b
\begin{ej}
	\begin{multicols}{2}
		\begin{pre}
			${1}
		\end{pre}
		\begin{sol}
			${0}
		\end{sol}
	\end{multicols}
\end{ej}
endsnippet

snippet ell "Ejemplo ilustrativo" b
\begin{ExampleIllustrative}
	$0
\end{ExampleIllustrative}
endsnippet
  
#indice alfabetico
  
#modulacion
snippet pr "Def problema" b
\newproblem{${0}}{}{}
endsnippet

##############################
#  TEXTO EN MODO MATEMATICO  #
#############################
#modo matematico 
snippet $ "modo matematico en linea" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

#Potencias 

#Subindices
snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

context "math()"
snippet '(?<!i)ts' "text subscript" irA
_{\text{$1}} $0
endsnippet

context "math()"
snippet '(?<!i)cs' "chemin subscript" irA
_{{\ce{$1}}} $0
endsnippet
# context "math()"
# snippet '([A-Za-z])(\d)' "auto subscript" wrA
# `!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
# endsnippet

# context "math()"
# snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
# `!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
# endsnippet

#Superindices
context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto supscript" wrA
`!p snip.rv = match.group(1)`^`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto supscript2" wrA
`!p snip.rv = match.group(1)`^{`!p snip.rv = match.group(2)`}
endsnippet

#Tamaño natural
snippet dm "Math" wA
\[${1:${VISUAL}}\] $0
endsnippet

#Fracciones
context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

#integrales
priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

#raices
context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

#sumatoria
snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

#productoria
snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

#lipsum
snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

#limites
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

#derivadas
snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

#puntos consecutivos
priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

#delimitadores
context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

#delimitadores amstmath
context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

#barras horizontales
context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

#llaves

#llaves horizontales

#vector unitario
context "math()"
priority 10
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet


#vectores a,.
context "math()"
snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet 


#negrilla modo matematico

#texto en modo matematico
context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

#spacio modo matematico

#centreado modo matematico \[\]

#equation

#areglos

#matrices
snippet pmat "pmat" iA
\begin{pmatrix} 
	$1 
\end{pmatrix} $0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix} 
	$1 
\end{bmatrix} $0
endsnippet

#eqnarray

#align
snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

#aligned conjunto de ecuaciones
context "math()"
snippet cjt "Conjunto de ecuaciones" b
\left[
\begin{aligned}
	${0}
\end{aligned}
\right.
endsnippet

snippet stm "Sistema de ecuaciones" b
\left\{
\begin{aligned}
	${0}
\end{aligned}
\right.
endsnippet

#multline

#otros entornos matematicos
snippet form "Fórmula" b
\begin{empheq}[box=\formeq]{align}
	$0
\end{empheq}
endsnippet

snippet resp "Respuesta" b
\begin{empheq}[box=\respuesta]{align*}
	${0}
\end{empheq}
endsnippet

snippet tabox "Tabla en caja" b
\begin{empheq}[box=\tabox{${1:título}}]{align*}
	${0}
\end{empheq}
endsnippet

#letra griegas

#operadores binarios
context "math()"
snippet xx "cross" iA
\times 
endsnippet

snippet Nn "cap" iA
\cap 
endsnippet

snippet UU "cup" iA
\cup 
endsnippet


#operadores relacionales
context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

snippet ~~ "~" iA
\sim 
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "LeftRightarrow" Ai
\iff
endsnippet


#negacion de relaciones
snippet != "equals" iA
\neq 
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet


#otros simbolos
snippet ooo "\infty" iA
\infty
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla 
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

#especiales


#simbolos del paquete amssymb

########################
#  PROGRAMACION LATEX  #
#######################
snippet pac "Package" b
\usepackage`!p snip.rv='[' if t[1] else ""`${1:options}`!p snip.rv = ']' if t[1] else ""`{${2:package}}$0
endsnippet

#nuevo comando 

#definicion


################################
#  TABLAS Y OBJETOS FLOTANTES  #
################################
#tabular
snippet tabular "tabular / array environment" b
\begin{${1:t}${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${2:c}}
$0${2/(?<=.)(c|l|r)|./(?1: & )/g}
\end{$1${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
endsnippet

pre_expand "create_table(snip)"
snippet "gentbl(\d+)x(\d+)" "Generate table of *width* by *height*" r
endsnippet

pre_expand "add_row(snip)"
snippet "tr(\d+)" "Add table row of dimension ..." r
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{${4:t}${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${5:c}}
	$0${5/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$4${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
\end{table}
endsnippet


# snippet tabular "Tabular environment" b
# \begin{table}[${1:htpb}]
# 	\centering
# 	\begin{tabular}{${5:c}}
# 	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
# 	\end{tabular}
# 	\caption{${2:caption}}
# 	\label{tab:${3:label}}
# \end{table}
# endsnippet

#longtable
snippet longtable "Longtable" b
\begin{table}[H]
	\centering
	\begin{longtable}[C]{${1}}
		\toprule
			${2}
		\midrule
			${3}
		\bottomrule
	\end{longtable}
	\caption{${4}}
\end{table}
endsnippet

snippet htabular "htabular" 
\begin{table}[H]
	\centering
	\begin{htabular}{${0}}
		\tw{}  &\tw{}					\\ \midrule
						&               \\ \midrule
						&
	\end{htabular}
	\caption{}
\end{table}
endsnippet

#figure
snippet fig "Figura tikz escalado" b
\begin{center}
	\begin{scaletikzpicturetowidth}{7cm}
		\begin{tikzpicture}[scale=\tikzscale]
			$0
		\end{tikzpicture}
	\end{scaletikzpicturetowidth}
\end{center}
endsnippet

snippet figm "Figura tikz en el margen" b
figura \ref{fig:$1}
\marginote{
	\begin{figure}[H]
		\centering
		\begin{tikzpicture}
			\draw (-2,-2) rectangle (2,2);
		\end{tikzpicture}
		\caption{}
		\label{fig:$1}
	\end{figure}
}
$0
endsnippet

snippet nrfig "N figuras tikz con referencia" b
\begin{figure}[H]
	\centering
	\subfigure[${2}]{
		\begin{tikzpicture}
			\draw (-2,-2) rectangle (2,2);
		\end{tikzpicture}
	}
	\subfigure[${4}]{
		\begin{tikzpicture}
			\draw (-2,-2) rectangle (2,2);
		\end{tikzpicture}
	}
	\caption{}
	\label{fig:${1}}
\end{figure}
endsnippet

snippet nrfigm "N figuras tikz con referencia en el margen" N figuras tikz con referencia en el margen
figura \refig{${1:nombre}}
\marginote{
	\begin{figure}[H]
		\centering
		\subfigure[${2}]{
			\begin{tikzpicture}
				\draw (-2,-2) rectangle (2,2);
			\end{tikzpicture}
		}
		\subfigure[${4}]{
			\begin{tikzpicture}
				\draw (-2,-2) rectangle (2,2);
			\end{tikzpicture}
		}
		\caption{}
		\label{fig:${1}}
	\end{figure}
}
${0}
endsnippet

snippet gIn "Gráfica inecuaciones" b
\begin{center} 
	\begin{scaletikzpicturetowidth}{7cm}
		\begin{tikzpicture}[scale=\\tikzscale]
			\def\numerosCriticos{${0:puntos critico}}
			\def\simbolo{/} %punto critico/simbolo
			\def\cerradoAbierto{/} %punto critico/cerrado o abierto
			\def\inicial{-} %+ o -
			\def\final{+} %+ o -
			\graficaIntervalos
			\scoped[on background layer]{
				\draw[latex-latex, \lineaColor, line width=\lineaGrosor]
				(\inicialX,\yy) -| (,\yy) -- (\finalX,\yy);
			}
		\end{tikzpicture}
	\end{scaletikzpicturetowidth}
\end{center}
endsnippet

snippet rfig "Figura tikz con referencia" b 
	\begin{figure}[H]
		\centering
		\begin{tikzpicture}
			\draw (-2,-2) rectangle (2,2);
		\end{tikzpicture}
		\caption{}
		\label{fig:${1}}
	\end{figure}
	${0}
endsnippet

#images
snippet img "Imagen sin referencia" b
\hImage{$0}
endsnippet

snippet imgm "Imagen en el margen" b 
\hImageM{$1} \refig{$1} $0
endsnippet

snippet nimgm "N images en el margen" b
\marginote{
	\begin{figure}[H]
		\centering
		\subfigure[${4}]{
			\pgfimage[width=\marginparwidth]{\rootimage/${1}${2}}
			\label{fig:${1}${2}}
		}
		\subfigure[${5}]{
			\pgfimage[width=\marginparwidth]{\rootimage/${1}${3}}
			\label{fig:${1}${3}}
		}
		\caption{}
		\label{fig:${1}}
	\end{figure}
}
endsnippet


#tabla

#fuentes en tablas

#color de tablas

#rotacion texto 

#expresion arroba{}

#unirceldas

#tabla en modo matematico

###############
#  TCOLORBOX  #
###############


##########
#  TIKZ  #
##########
snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

snippet tikz "Entorno tikz" b
\begin{center}
	\begin{tikzpicture}
		${0}
	\end{tikzpicture}
\end{center}
endsnippet


#######################
#  INSERTAR GRAFICOS  #
#######################

################################
#  EDICION GRAFICOS Y FIGURAS  #
################################

################################
#  PERSONALIZACION DOCUMENTOS  #
################################


#plantillas

#libro de algoritmos y programacion

snippet "mint(ed)?( (\S+))?" "Minted code typeset" br
\begin{listing}
\begin{minted}[linenos,numbersep=5pt,frame=lines,framesep=2mm]{${1:`!p
snip.rv = match.group(3) if match.group(2) is not None else "language"`}}
${2:${VISUAL:code}}
\end{minted}
\caption{${3:caption name}}
\label{lst:${4:${3/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
\end{listing}

$0
endsnippet

############
#  BEANER  #
############



###########
#  SYMPY  #
###########
snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

#########################
#  MATEMATICA SOFTWARE  #
#########################
priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet


#############
#  QUIMICA  #
#############
snippet ce "chemin" b
\ce{`!p snip.rv=match.group(1)`}
endsnippet

snippet chemin "Nomenclatura inorgánica" b
snippet chemin "Nomenclatura inorgánica" 
	\chemin[$1]{
		\ntra{$2}\\
		\nsto{$3}\\
		\niup{$0}
}
endsnippet



